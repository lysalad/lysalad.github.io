2022 0530

금요일에 배운 것
- 변수표현과 함께 사용할 수 있는 상수
변수 공간에 들어있는 것은 항상 변할 가능성을 가지고 있다.
변수처럼 상수라는 것도 하나의 공간으로 만들어놓고, 값을 넣을 수 있다.
선언할 때 final을 붙인다.
final의 이름은 모두 대문자로 적어준다.

- 상수 값이 파라미터로 전달되었을 때
파라미터로 전달된 상수 값은 값이 복사되어서 파라미터로 전달이 된다.
그 값이 직접 들어가는 게 X 복사가 되는 것이다.
파라미터 선언에도 final을 붙이면 상수가 된다.

- 동적과 정적
동적은 실행할 때 일어나는 것이다. (있을 수도 있고 없을 수도 있어서 실행해봐야 안다.)
정적은 실행 전에 미리 만들어져서 고정되어있는 것이다. (언제나 있다.)

- 자바에서 자체적으로 만들어놓은 상수들이 있다.
math라는 클래스 이름으로 상수를 사용가능하다. PI값 등이 있다.


* 객체 지향 프로그래밍 *
세상에 있는 모든 것들을 객체로 보는 것에서 시작한다.
이 객체들은 상태와 동작으로 나타낼 수 있다.
상태 = 변수의 형태로 값으로 표현되는 것이다.
동작 = 메소드로 표현되는 것이다.
변수와 메소가 하나로 묶여있는 걸 java에서는 객체라고 한다.

객체는 자바 코드로는 class로 표현이 된다.
필드는 변수의 형태로 이름과 타입을 고민을 해서 적어주면 되는 곳이다.
class라는 박스 안에 field가 있다.

상태 = 변수로 표현되기 때문에 변할 가능성이 있다.
상태 속의 변수들끼리는 영향을 받는다.
필요할 때 계산하도록 게으르게 만들어야한다.

- 참조형 변수들이 null을 참조하면 참조하는 것이 없다는 걸로 취급한다.
컴파일 시에는 문법상으로 맞기 때문에 에러가 안난다.
실행 시에 null을 참조한 변수가 있다면 에러가 난다.
참조형 변수를 사용할때는 null인지 아닌지 확인해야한다.

- 0527 dateInf.java
System.out.printf("%d-%02d-%02d\n", year, month, day)
이렇게 하면 정수형이면서 0을 포함하고 2자리로 표현할 수 있다.

System.out.printf("%d-%02d-%02d\n", year % 100, month, day)
이렇게 하면 22/05/27로 출력되게 할 수 있다.

-movieInf, movieTestEX03.java
필드 초기화는 내가 직접 하지 않아도 일어나고 있다.
이렇게 일어나는 초기화 부분이 new movieInf();에서 ();부분이다.
이 부분을 생성자(constructor)라고 부른다.

기본 생성자는 기본 값으로 초기화를 하는 역할을 한다. ???
이게 무슨말이냐...?
정수형은 -> 0으로 초기화
실수형 -> 0.0
논리형 -> false
참조형 -> null
로 타입별로 다르게 초기화를 한다.

그래서 MovieTestEX03의 결과가
null, 0, 0.0으로 나온 것이다.

우리 의도에 맞게끔 그때그때 초기화를 시켜줄 수 있는 생성자를
우리가 직접 만들 수 있다.

- 객체는 언제나 필드를 필요로 하는데
기본으로 초기화를 시켜야 주기 위해서

 


